package org.camunda.bpm.dissiservice.servicerequest;

import java.sql.Connection;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.DriverManager;
import java.util.logging.Logger;
import org.camunda.bpm.engine.delegate.DelegateExecution;
import org.camunda.bpm.engine.delegate.ExecutionListener;

/* *
 * Execution Listener
 * Execution listeners allow you to execute external Java code or 
 * evaluate an expression when certain events occur during process execution. 
 * */
public class UserExecController implements ExecutionListener {

	/* *
	 * Variables Globales
	 * 	CONNECTION: A connection (session) with a specific database.
	 * 	STATEMENT: Used for executing a static SQL statement and returning the results it produces.
	 * 	RESULT: A table of data representing a database result set, which is usually generated by 
	 * 		executing a statement that queries the database.
	 * 	LOGGER: Used to log messages for a specific system or application component.
	 * */
	Connection CONNECTION = null;
	Statement STATEMENT = null;
	ResultSet RESULT = null;
	private final static Logger LOGGER = Logger.getLogger("SERVICE-REQUEST");
	
	public void notify(DelegateExecution execution) throws Exception {
		
		/* *
		 * Variables Locales
		 * 	URL: url of the local database
		 * 	USERNAME: username for connecting to the database
		 * 	PASSWORD: password for connecting to the database
		 * 	ACTIVITY: Tracks the current User Task Id
		 * */
		final String URL = "jdbc:mysql://localhost:3306/Dissi";
		final String USERNAME = "username";
		final String PASSWORD = "password";
		final String ACTIVITY = execution.getCurrentActivityId();
		
		/* *
		 * Testing program values
		 * The User Task Id must be assigned in the "service-request.bpmn"
		 * 				UserTask > General > Id
		 * */
		LOGGER.info("****** Testing program variables ******");
		
		switch (ACTIVITY) {
		case "createUser":
			// Write some code here
			break;
		case "assignEngineer":
			// Write some code here
			break;
		case "identifyMaterials":
			// Write some code here
			break;
		case "productCuantity":
			// Write some code here
			break;
		case "estimatedTime":
			// Write some code here
			break;
		case "calculateCost":
			// Write some code here
			break;
		case "searchTemplate":
			// Write some code here
			break;
		case "generalData":
			// Write some code here
			break;
		case "validateService":
			// Write some code here
			break;
		case "saveQuote":
			// Write some code here
			break;
		case "saveRequest":
			// Write some code here
			break;
		default:
			break;
		}
	}
	
	/* *
	 * Creating connection to Database (localhost)
	 * 	parameters: url, username, password
	 * Once the connection is established, every written query must be executed.
	 * */
	public void connectDB(String url, String username, String password) throws SQLException {
		CONNECTION = DriverManager.getConnection(url, username, password);
	}
	
	public void disconnectDB() throws SQLException {
		CONNECTION.close();
	}
	
	public void createStatement() {
		
	}
	
	public void executeQuery() {
		
	}
}